#!/usr/bin/env python
"""
Provides a VulnerabilityReport object for the Vultron ActivityStreams Vocabulary.
"""
#  Copyright (c) 2023-2024 Carnegie Mellon University and Contributors.
#  - see Contributors.md for a full list of Contributors
#  - see ContributionInstructions.md for information on how you can Contribute to this project
#  Vultron Multiparty Coordinated Vulnerability Disclosure Protocol Prototype is
#  licensed under a MIT (SEI)-style license, please see LICENSE.md distributed
#  with this Software or contact permission@sei.cmu.edu for full terms.
#  Created, in part, with funding and support from the United States Government
#  (see Acknowledgments file). This program may include and/or can make use of
#  certain third party source code, object code, documentation and other files
#  (“Third Party Software”). See LICENSE.md for more details.
#  Carnegie Mellon®, CERT® and CERT Coordination Center® are registered in the
#  U.S. Patent and Trademark Office by Carnegie Mellon University

from dataclasses import dataclass

from dataclasses_json import LetterCase, dataclass_json

from vultron.as_vocab.base import activitystreams_object
from vultron.as_vocab.objects.base import VultronObject


@activitystreams_object
@dataclass_json(letter_case=LetterCase.CAMEL)
@dataclass
class VulnerabilityReport(VultronObject):
    """
    Represents a Vulnerability Report as an ActivityStreams Object.
    """


def main():
    from vultron.as_vocab.base.objects.actors import as_Actor

    reporter = as_Actor()
    obj = VulnerabilityReport(
        content="Report content goes here",
        attributed_to=[
            reporter,
        ],
        context="Optional Case ID",
    )
    _json = obj.to_json(indent=2)
    print(_json)
    with open("../../../doc/examples/vulnerability_report.json", "w") as fp:
        fp.write(_json)


if __name__ == "__main__":
    main()
