#!/usr/bin/env python
"""
Provides behaviors associated with exploit acquisition.
"""
#  Copyright (c) 2023 Carnegie Mellon University and Contributors.
#  - see Contributors.md for a full list of Contributors
#  - see ContributionInstructions.md for information on how you can Contribute to this project
#  Vultron Multiparty Coordinated Vulnerability Disclosure Protocol Prototype is
#  licensed under a MIT (SEI)-style license, please see LICENSE.md distributed
#  with this Software or contact permission@sei.cmu.edu for full terms.
#  Created, in part, with funding and support from the United States Government
#  (see Acknowledgments file). This program may include and/or can make use of
#  certain third party source code, object code, documentation and other files
#  (“Third Party Software”). See LICENSE.md for more details.
#  Carnegie Mellon®, CERT® and CERT Coordination Center® are registered in the
#  U.S. Patent and Trademark Office by Carnegie Mellon University

from vultron.bt.base.factory import fallback_node, sequence_node
from vultron.bt.report_management.fuzzer.acquire_exploit import (
    DevelopExploit,
    EvaluateExploitPriority,
    ExploitDeferred,
    ExploitDesired,
    ExploitPrioritySet,
    FindExploit,
    HaveExploit,
    PurchaseExploit,
)


_EnsureExploitPriorityIsSet = fallback_node(
    "_EnsureExploitPriorityIsSet",
    """This node ensures that the exploit priority is set.""",
    ExploitPrioritySet,
    EvaluateExploitPriority,
)


_AttemptExploitAcquisition = fallback_node(
    "_AttemptExploitAcquisition",
    """This node attempts to acquire the exploit.
    Steps:
    1. Attempt to find the exploit in the wild
    2. Attempt to develop the exploit in-house
    3. Attempt to purchase the exploit from someone else
    If any of these steps succeed, the exploit is acquired.
    If all of these steps fail, the exploit is not acquired.
    """,
    FindExploit,
    DevelopExploit,
    PurchaseExploit,
)


_AcquireExploitIfDesired = sequence_node(
    "_AcquireExploitIfDesired",
    """This node attempts to acquire the exploit if it is desired.
    Steps:
    1. Ensure that the exploit priority is set
    2. Ensure that the exploit is desired
    3. Attempt to acquire the exploit
    If all of these steps succeed, the exploit is acquired.
    If any of these steps fail, the exploit is not acquired.
    """,
    _EnsureExploitPriorityIsSet,
    ExploitDesired,
    _AttemptExploitAcquisition,
)


AcquireExploit = fallback_node(
    "AcquireExploit",
    """This node attempts to acquire the exploit.
    Steps:
    1. Check whether the exploit is already acquired
    2. Attempt to acquire the exploit if it is desired
    3. If the exploit is not acquired, decide whether to defer the acquisition attempt
    If any of these steps succeed, the node succeeds.
    If all of these steps fail, the node fails.
    """,
    HaveExploit,
    _AcquireExploitIfDesired,
    ExploitDeferred,
)
